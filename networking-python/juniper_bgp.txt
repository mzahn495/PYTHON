#!/usr/local/bin/python
import glob
import os
import pprint
import glob
import os
import subprocess
import random
import sys
import time
import re

## This configuration is based off of a BASH script located in the /home/syscheck/get_bgp_neighbors.sh
## That pulls the Circuit ID and BGP ip addresses.
## The modification here is that it will pull that information from the ipsec bckups
## Located in /data/1_Network_Config_Backups/
## #!/usr/local/bin/bash
## ssh ipsec01 "show configuration | match neighbor | display set" | awk '{print $5 " " $7}' | sort -u
##  cat `ls -rt | tail -1` | grep neighbor | awk '{print $5 " " $7}' | sort -u

##Need to add a removal portion to remove to delete ipsec_bounce_report
if os.path.exists('/home/syscheck/juniper_bgp.dll'):
    os.remove('/home/syscheck/juniper_bgp.dll')

ipsec01_PATH = glob.glob('/data/1_Network_Config_Backups/IPSEC01/*')
ipsec01 = max(ipsec01_PATH, key=os.path.getctime)

ipsec03_PATH = glob.glob('/data/1_Network_Config_Backups/IPSEC03/*')
ipsec03 = max(ipsec03_PATH, key=os.path.getctime)

ipsec05_PATH = glob.glob('/data/1_Network_Config_Backups/IPSEC05/*')
ipsec05 = max(ipsec05_PATH, key=os.path.getctime)

ipsec06_PATH = glob.glob('/data/1_Network_Config_Backups/IPSEC06/*')
ipsec06 = max(ipsec06_PATH, key=os.path.getctime)


#########################################################################


def ipsec_bgp(j_ipsec):


    fn = j_ipsec

    p1 = subprocess.Popen(
        ["cat"], stdin=open(fn, "r"),
        stdout=subprocess.PIPE,
    )

    p2 = subprocess.Popen(
        ["grep", "neighbor"],
        stdin=p1.stdout,
        stdout=subprocess.PIPE,
    )

    p3 = subprocess.Popen(
        ["awk", '{print $5 " " $7}'],
        stdin=p2.stdout,
        stdout=subprocess.PIPE,
    )

    p4 = subprocess.Popen(
        ["sort", "-u" ],
        stdin=p3.stdout,
        stdout=subprocess.PIPE,
    )

    end_pipe = p4.stdout


    words = []
    for line in end_pipe:
        word = line.strip()
        words.append(word)


        myfile = open('/home/syscheck/juniper_bgp.dll', 'a')
        myfile.write(word + '\n')
        myfile.close()
        pprint.pprint(words)


ipsec_bgp(ipsec01)
ipsec_bgp(ipsec03)
ipsec_bgp(ipsec05)
ipsec_bgp(ipsec06)

