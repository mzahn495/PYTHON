#!/usr/local/bin/python
import pprint
import glob
import os
import pprint
import glob
import os
import subprocess
import random
import sys
import time
import re

##
##cat /data/1_Network_Config_Backups/IPSEC07/ipsec07_config_04102018-04:45-UTC | grep -A2 'crypto map outside-map' | awk '{print  $2, $3 }' | grep -v 'map\|Port' | sed 's/peer //' | awk NF | sed 's/$/ /' | tr -d '\r\n\n'


## Need to add a removal portion to remove to delete ipsec_bounce_report
if os.path.exists('/home/syscheck/cisco.dll'):
    os.remove('/home/syscheck/cisco.dll')

#ipsec02_PATH = glob.glob('/data/1_Network_Config_Backups/IPSEC02/*')
#ipsec02 = max(ipsec02_PATH, key=os.path.getctime)

#ipsec04_PATH = glob.glob('/data/1_Network_Config_Backups/IPSEC04/*')
#ipsec04 = max(ipsec04_PATH, key=os.path.getctime)

ipsec07_PATH = glob.glob('/data/1_Network_Config_Backups/IPSEC07/*')
ipsec07 = max(ipsec07_PATH, key=os.path.getctime)

ipsec08_PATH = glob.glob('/data/1_Network_Config_Backups/IPSEC08/*')
ipsec08 = max(ipsec08_PATH, key=os.path.getctime)


def ipsec_cisco(cisco_devices):


    fn = cisco_devices

    p1 = subprocess.Popen(
        ["cat"], stdin=open(fn, "r"),
        stdout=subprocess.PIPE,
    )


    p2 = subprocess.Popen(
        ["grep", "-A2", "crypto map outside-map"],
        stdin=p1.stdout,
        stdout=subprocess.PIPE,
    )

    p3 = subprocess.Popen(
        ["awk", "{print $2 $3 }"],
        stdin=p2.stdout,
        stdout=subprocess.PIPE,
    )
##grep -v 'map\|Port' | sed 's/peer //' | awk NF | sed 's/$/ /' | tr -d '\r\n\n'
    p4 = subprocess.Popen(
        ["grep", "-v", "map\|Port"],
        stdin=p3.stdout,
        stdout=subprocess.PIPE,
    )

    p5 = subprocess.Popen(
        ["sed", "s/peer//"],
        stdin=p4.stdout,
        stdout=subprocess.PIPE,
    )

    p6 = subprocess.Popen(
        ["awk", "NF"],
        stdin=p5.stdout,
        stdout=subprocess.PIPE,
    )

    p7 = subprocess.Popen(
        ["sed", "s/$/ /"],
        stdin=p6.stdout,
        stdout=subprocess.PIPE,
    )

    p8 = subprocess.Popen(
        ["tr", "-d", "\r\n"],
        stdin=p7.stdout,
        stdout=subprocess.PIPE,
    )

    end_pipe = p8.stdout


    words = []
    for line in end_pipe:
        word = line.strip()
        words.append(word)


        myfile = open('/home/syscheck/cisco.dll', 'a')
        myfile.write(word + '\n')
        myfile.close()
        pprint.pprint(words)


ipsec_cisco(ipsec07)
ipsec_cisco(ipsec08)

